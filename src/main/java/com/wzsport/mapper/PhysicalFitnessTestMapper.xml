<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzsport.mapper.PhysicalFitnessTestMapper">
  <resultMap id="BaseResultMap" type="com.wzsport.model.PhysicalFitnessTest">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="university_id" jdbcType="BIGINT" property="universityId" />
    <result column="gradle" jdbcType="INTEGER" property="gradle" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="class_no" jdbcType="BIGINT" property="classNo" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="is_man" jdbcType="TINYINT" property="isMan" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="nation_no" jdbcType="INTEGER" property="nationNo" />
    <result column="nation_name" jdbcType="VARCHAR" property="nationName" />
    <result column="student_no" jdbcType="VARCHAR" property="studentNo" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="total_points" jdbcType="DOUBLE" property="totalPoints" />
    <result column="total_points_level" jdbcType="VARCHAR" property="totalPointsLevel" />
    <result column="stature" jdbcType="INTEGER" property="stature" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="stature_weight_point" jdbcType="INTEGER" property="statureWeightPoint" />
    <result column="stature_weight_level" jdbcType="VARCHAR" property="statureWeightLevel" />
    <result column="BMI" jdbcType="DOUBLE" property="bmi" />
    <result column="vital_capacity" jdbcType="INTEGER" property="vitalCapacity" />
    <result column="vital_capacity_point" jdbcType="INTEGER" property="vitalCapacityPoint" />
    <result column="vital _capacity_level" jdbcType="VARCHAR" property="vitalCapacityLevel" />
    <result column="stand_jump" jdbcType="INTEGER" property="standJump" />
    <result column="stand_jump_point" jdbcType="INTEGER" property="standJumpPoint" />
    <result column="stand_jump_level" jdbcType="VARCHAR" property="standJumpLevel" />
    <result column="sitting_flexion" jdbcType="DOUBLE" property="sittingFlexion" />
    <result column="sitting_flexion_point" jdbcType="INTEGER" property="sittingFlexionPoint" />
    <result column="sitting_flexion_level" jdbcType="VARCHAR" property="sittingFlexionLevel" />
    <result column="sit_ups" jdbcType="INTEGER" property="sitUps" />
    <result column="sit_ups_point" jdbcType="INTEGER" property="sitUpsPoint" />
    <result column="sit_ups_level" jdbcType="VARCHAR" property="sitUpsLevel" />
    <result column="push_ups" jdbcType="INTEGER" property="pushUps" />
    <result column="push_ups_point" jdbcType="INTEGER" property="pushUpsPoint" />
    <result column="push_ups_level" jdbcType="VARCHAR" property="pushUpsLevel" />
    <result column="fifty_run" jdbcType="DOUBLE" property="fiftyRun" />
    <result column="fifty_run_point" jdbcType="INTEGER" property="fiftyRunPoint" />
    <result column="fifty_run_level" jdbcType="VARCHAR" property="fiftyRunLevel" />
    <result column="eight_hundred_run" jdbcType="DOUBLE" property="eightHundredRun" />
    <result column="eight_hundred_point" jdbcType="INTEGER" property="eightHundredPoint" />
    <result column="eight_hundred_level" jdbcType="VARCHAR" property="eightHundredLevel" />
    <result column="one_thousand_run" jdbcType="DOUBLE" property="oneThousandRun" />
    <result column="one_thousand_point" jdbcType="INTEGER" property="oneThousandPoint" />
    <result column="one_thousand_level" jdbcType="VARCHAR" property="oneThousandLevel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    id, university_id, gradle, name, class_no, class_name, college, is_man, birth, nation_no, 
    nation_name, student_no, remark, total_points, total_points_level, stature, weight, 
    stature_weight_point, stature_weight_level, BMI, vital_capacity, vital_capacity_point, 
    "vital _capacity_level", stand_jump, stand_jump_point, stand_jump_level, sitting_flexion, 
    sitting_flexion_point, sitting_flexion_level, sit_ups, sit_ups_point, sit_ups_level, 
    push_ups, push_ups_point, push_ups_level, fifty_run, fifty_run_point, fifty_run_level, 
    eight_hundred_run, eight_hundred_point, eight_hundred_level, one_thousand_run, one_thousand_point, 
    one_thousand_level
  </sql>
  <select id="selectByExample" parameterType="com.wzsport.model.PhysicalFitnessTestExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wzsport_physical_fitness_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.wzsport.model.PhysicalFitnessTestExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    delete from wzsport_physical_fitness_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.wzsport.model.PhysicalFitnessTest">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wzsport_physical_fitness_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="universityId != null">
        university_id,
      </if>
      <if test="gradle != null">
        gradle,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="classNo != null">
        class_no,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="isMan != null">
        is_man,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="nationNo != null">
        nation_no,
      </if>
      <if test="nationName != null">
        nation_name,
      </if>
      <if test="studentNo != null">
        student_no,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="totalPoints != null">
        total_points,
      </if>
      <if test="totalPointsLevel != null">
        total_points_level,
      </if>
      <if test="stature != null">
        stature,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="statureWeightPoint != null">
        stature_weight_point,
      </if>
      <if test="statureWeightLevel != null">
        stature_weight_level,
      </if>
      <if test="bmi != null">
        BMI,
      </if>
      <if test="vitalCapacity != null">
        vital_capacity,
      </if>
      <if test="vitalCapacityPoint != null">
        vital_capacity_point,
      </if>
      <if test="vitalCapacityLevel != null">
        "vital _capacity_level",
      </if>
      <if test="standJump != null">
        stand_jump,
      </if>
      <if test="standJumpPoint != null">
        stand_jump_point,
      </if>
      <if test="standJumpLevel != null">
        stand_jump_level,
      </if>
      <if test="sittingFlexion != null">
        sitting_flexion,
      </if>
      <if test="sittingFlexionPoint != null">
        sitting_flexion_point,
      </if>
      <if test="sittingFlexionLevel != null">
        sitting_flexion_level,
      </if>
      <if test="sitUps != null">
        sit_ups,
      </if>
      <if test="sitUpsPoint != null">
        sit_ups_point,
      </if>
      <if test="sitUpsLevel != null">
        sit_ups_level,
      </if>
      <if test="pushUps != null">
        push_ups,
      </if>
      <if test="pushUpsPoint != null">
        push_ups_point,
      </if>
      <if test="pushUpsLevel != null">
        push_ups_level,
      </if>
      <if test="fiftyRun != null">
        fifty_run,
      </if>
      <if test="fiftyRunPoint != null">
        fifty_run_point,
      </if>
      <if test="fiftyRunLevel != null">
        fifty_run_level,
      </if>
      <if test="eightHundredRun != null">
        eight_hundred_run,
      </if>
      <if test="eightHundredPoint != null">
        eight_hundred_point,
      </if>
      <if test="eightHundredLevel != null">
        eight_hundred_level,
      </if>
      <if test="oneThousandRun != null">
        one_thousand_run,
      </if>
      <if test="oneThousandPoint != null">
        one_thousand_point,
      </if>
      <if test="oneThousandLevel != null">
        one_thousand_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="universityId != null">
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="gradle != null">
        #{gradle,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        #{classNo,jdbcType=BIGINT},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="isMan != null">
        #{isMan,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="nationNo != null">
        #{nationNo,jdbcType=INTEGER},
      </if>
      <if test="nationName != null">
        #{nationName,jdbcType=VARCHAR},
      </if>
      <if test="studentNo != null">
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="totalPoints != null">
        #{totalPoints,jdbcType=DOUBLE},
      </if>
      <if test="totalPointsLevel != null">
        #{totalPointsLevel,jdbcType=VARCHAR},
      </if>
      <if test="stature != null">
        #{stature,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="statureWeightPoint != null">
        #{statureWeightPoint,jdbcType=INTEGER},
      </if>
      <if test="statureWeightLevel != null">
        #{statureWeightLevel,jdbcType=VARCHAR},
      </if>
      <if test="bmi != null">
        #{bmi,jdbcType=DOUBLE},
      </if>
      <if test="vitalCapacity != null">
        #{vitalCapacity,jdbcType=INTEGER},
      </if>
      <if test="vitalCapacityPoint != null">
        #{vitalCapacityPoint,jdbcType=INTEGER},
      </if>
      <if test="vitalCapacityLevel != null">
        #{vitalCapacityLevel,jdbcType=VARCHAR},
      </if>
      <if test="standJump != null">
        #{standJump,jdbcType=INTEGER},
      </if>
      <if test="standJumpPoint != null">
        #{standJumpPoint,jdbcType=INTEGER},
      </if>
      <if test="standJumpLevel != null">
        #{standJumpLevel,jdbcType=VARCHAR},
      </if>
      <if test="sittingFlexion != null">
        #{sittingFlexion,jdbcType=DOUBLE},
      </if>
      <if test="sittingFlexionPoint != null">
        #{sittingFlexionPoint,jdbcType=INTEGER},
      </if>
      <if test="sittingFlexionLevel != null">
        #{sittingFlexionLevel,jdbcType=VARCHAR},
      </if>
      <if test="sitUps != null">
        #{sitUps,jdbcType=INTEGER},
      </if>
      <if test="sitUpsPoint != null">
        #{sitUpsPoint,jdbcType=INTEGER},
      </if>
      <if test="sitUpsLevel != null">
        #{sitUpsLevel,jdbcType=VARCHAR},
      </if>
      <if test="pushUps != null">
        #{pushUps,jdbcType=INTEGER},
      </if>
      <if test="pushUpsPoint != null">
        #{pushUpsPoint,jdbcType=INTEGER},
      </if>
      <if test="pushUpsLevel != null">
        #{pushUpsLevel,jdbcType=VARCHAR},
      </if>
      <if test="fiftyRun != null">
        #{fiftyRun,jdbcType=DOUBLE},
      </if>
      <if test="fiftyRunPoint != null">
        #{fiftyRunPoint,jdbcType=INTEGER},
      </if>
      <if test="fiftyRunLevel != null">
        #{fiftyRunLevel,jdbcType=VARCHAR},
      </if>
      <if test="eightHundredRun != null">
        #{eightHundredRun,jdbcType=DOUBLE},
      </if>
      <if test="eightHundredPoint != null">
        #{eightHundredPoint,jdbcType=INTEGER},
      </if>
      <if test="eightHundredLevel != null">
        #{eightHundredLevel,jdbcType=VARCHAR},
      </if>
      <if test="oneThousandRun != null">
        #{oneThousandRun,jdbcType=DOUBLE},
      </if>
      <if test="oneThousandPoint != null">
        #{oneThousandPoint,jdbcType=INTEGER},
      </if>
      <if test="oneThousandLevel != null">
        #{oneThousandLevel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wzsport.model.PhysicalFitnessTestExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    select count(*) from wzsport_physical_fitness_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    update wzsport_physical_fitness_test
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.universityId != null">
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.gradle != null">
        gradle = #{record.gradle,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.classNo != null">
        class_no = #{record.classNo,jdbcType=BIGINT},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.isMan != null">
        is_man = #{record.isMan,jdbcType=TINYINT},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.nationNo != null">
        nation_no = #{record.nationNo,jdbcType=INTEGER},
      </if>
      <if test="record.nationName != null">
        nation_name = #{record.nationName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentNo != null">
        student_no = #{record.studentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPoints != null">
        total_points = #{record.totalPoints,jdbcType=DOUBLE},
      </if>
      <if test="record.totalPointsLevel != null">
        total_points_level = #{record.totalPointsLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.stature != null">
        stature = #{record.stature,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.statureWeightPoint != null">
        stature_weight_point = #{record.statureWeightPoint,jdbcType=INTEGER},
      </if>
      <if test="record.statureWeightLevel != null">
        stature_weight_level = #{record.statureWeightLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.bmi != null">
        BMI = #{record.bmi,jdbcType=DOUBLE},
      </if>
      <if test="record.vitalCapacity != null">
        vital_capacity = #{record.vitalCapacity,jdbcType=INTEGER},
      </if>
      <if test="record.vitalCapacityPoint != null">
        vital_capacity_point = #{record.vitalCapacityPoint,jdbcType=INTEGER},
      </if>
      <if test="record.vitalCapacityLevel != null">
        "vital _capacity_level" = #{record.vitalCapacityLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.standJump != null">
        stand_jump = #{record.standJump,jdbcType=INTEGER},
      </if>
      <if test="record.standJumpPoint != null">
        stand_jump_point = #{record.standJumpPoint,jdbcType=INTEGER},
      </if>
      <if test="record.standJumpLevel != null">
        stand_jump_level = #{record.standJumpLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.sittingFlexion != null">
        sitting_flexion = #{record.sittingFlexion,jdbcType=DOUBLE},
      </if>
      <if test="record.sittingFlexionPoint != null">
        sitting_flexion_point = #{record.sittingFlexionPoint,jdbcType=INTEGER},
      </if>
      <if test="record.sittingFlexionLevel != null">
        sitting_flexion_level = #{record.sittingFlexionLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.sitUps != null">
        sit_ups = #{record.sitUps,jdbcType=INTEGER},
      </if>
      <if test="record.sitUpsPoint != null">
        sit_ups_point = #{record.sitUpsPoint,jdbcType=INTEGER},
      </if>
      <if test="record.sitUpsLevel != null">
        sit_ups_level = #{record.sitUpsLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.pushUps != null">
        push_ups = #{record.pushUps,jdbcType=INTEGER},
      </if>
      <if test="record.pushUpsPoint != null">
        push_ups_point = #{record.pushUpsPoint,jdbcType=INTEGER},
      </if>
      <if test="record.pushUpsLevel != null">
        push_ups_level = #{record.pushUpsLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.fiftyRun != null">
        fifty_run = #{record.fiftyRun,jdbcType=DOUBLE},
      </if>
      <if test="record.fiftyRunPoint != null">
        fifty_run_point = #{record.fiftyRunPoint,jdbcType=INTEGER},
      </if>
      <if test="record.fiftyRunLevel != null">
        fifty_run_level = #{record.fiftyRunLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.eightHundredRun != null">
        eight_hundred_run = #{record.eightHundredRun,jdbcType=DOUBLE},
      </if>
      <if test="record.eightHundredPoint != null">
        eight_hundred_point = #{record.eightHundredPoint,jdbcType=INTEGER},
      </if>
      <if test="record.eightHundredLevel != null">
        eight_hundred_level = #{record.eightHundredLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.oneThousandRun != null">
        one_thousand_run = #{record.oneThousandRun,jdbcType=DOUBLE},
      </if>
      <if test="record.oneThousandPoint != null">
        one_thousand_point = #{record.oneThousandPoint,jdbcType=INTEGER},
      </if>
      <if test="record.oneThousandLevel != null">
        one_thousand_level = #{record.oneThousandLevel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    update wzsport_physical_fitness_test
    set id = #{record.id,jdbcType=BIGINT},
      university_id = #{record.universityId,jdbcType=BIGINT},
      gradle = #{record.gradle,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      class_no = #{record.classNo,jdbcType=BIGINT},
      class_name = #{record.className,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      is_man = #{record.isMan,jdbcType=TINYINT},
      birth = #{record.birth,jdbcType=DATE},
      nation_no = #{record.nationNo,jdbcType=INTEGER},
      nation_name = #{record.nationName,jdbcType=VARCHAR},
      student_no = #{record.studentNo,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      total_points = #{record.totalPoints,jdbcType=DOUBLE},
      total_points_level = #{record.totalPointsLevel,jdbcType=VARCHAR},
      stature = #{record.stature,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      stature_weight_point = #{record.statureWeightPoint,jdbcType=INTEGER},
      stature_weight_level = #{record.statureWeightLevel,jdbcType=VARCHAR},
      BMI = #{record.bmi,jdbcType=DOUBLE},
      vital_capacity = #{record.vitalCapacity,jdbcType=INTEGER},
      vital_capacity_point = #{record.vitalCapacityPoint,jdbcType=INTEGER},
      "vital _capacity_level" = #{record.vitalCapacityLevel,jdbcType=VARCHAR},
      stand_jump = #{record.standJump,jdbcType=INTEGER},
      stand_jump_point = #{record.standJumpPoint,jdbcType=INTEGER},
      stand_jump_level = #{record.standJumpLevel,jdbcType=VARCHAR},
      sitting_flexion = #{record.sittingFlexion,jdbcType=DOUBLE},
      sitting_flexion_point = #{record.sittingFlexionPoint,jdbcType=INTEGER},
      sitting_flexion_level = #{record.sittingFlexionLevel,jdbcType=VARCHAR},
      sit_ups = #{record.sitUps,jdbcType=INTEGER},
      sit_ups_point = #{record.sitUpsPoint,jdbcType=INTEGER},
      sit_ups_level = #{record.sitUpsLevel,jdbcType=VARCHAR},
      push_ups = #{record.pushUps,jdbcType=INTEGER},
      push_ups_point = #{record.pushUpsPoint,jdbcType=INTEGER},
      push_ups_level = #{record.pushUpsLevel,jdbcType=VARCHAR},
      fifty_run = #{record.fiftyRun,jdbcType=DOUBLE},
      fifty_run_point = #{record.fiftyRunPoint,jdbcType=INTEGER},
      fifty_run_level = #{record.fiftyRunLevel,jdbcType=VARCHAR},
      eight_hundred_run = #{record.eightHundredRun,jdbcType=DOUBLE},
      eight_hundred_point = #{record.eightHundredPoint,jdbcType=INTEGER},
      eight_hundred_level = #{record.eightHundredLevel,jdbcType=VARCHAR},
      one_thousand_run = #{record.oneThousandRun,jdbcType=DOUBLE},
      one_thousand_point = #{record.oneThousandPoint,jdbcType=INTEGER},
      one_thousand_level = #{record.oneThousandLevel,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wzsport.model.PhysicalFitnessTest">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 15 11:00:50 CST 2017.
    -->
    update wzsport_physical_fitness_test
    <set>
      <if test="universityId != null">
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="gradle != null">
        gradle = #{gradle,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        class_no = #{classNo,jdbcType=BIGINT},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="isMan != null">
        is_man = #{isMan,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="nationNo != null">
        nation_no = #{nationNo,jdbcType=INTEGER},
      </if>
      <if test="nationName != null">
        nation_name = #{nationName,jdbcType=VARCHAR},
      </if>
      <if test="studentNo != null">
        student_no = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="totalPoints != null">
        total_points = #{totalPoints,jdbcType=DOUBLE},
      </if>
      <if test="totalPointsLevel != null">
        total_points_level = #{totalPointsLevel,jdbcType=VARCHAR},
      </if>
      <if test="stature != null">
        stature = #{stature,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="statureWeightPoint != null">
        stature_weight_point = #{statureWeightPoint,jdbcType=INTEGER},
      </if>
      <if test="statureWeightLevel != null">
        stature_weight_level = #{statureWeightLevel,jdbcType=VARCHAR},
      </if>
      <if test="bmi != null">
        BMI = #{bmi,jdbcType=DOUBLE},
      </if>
      <if test="vitalCapacity != null">
        vital_capacity = #{vitalCapacity,jdbcType=INTEGER},
      </if>
      <if test="vitalCapacityPoint != null">
        vital_capacity_point = #{vitalCapacityPoint,jdbcType=INTEGER},
      </if>
      <if test="vitalCapacityLevel != null">
        "vital _capacity_level" = #{vitalCapacityLevel,jdbcType=VARCHAR},
      </if>
      <if test="standJump != null">
        stand_jump = #{standJump,jdbcType=INTEGER},
      </if>
      <if test="standJumpPoint != null">
        stand_jump_point = #{standJumpPoint,jdbcType=INTEGER},
      </if>
      <if test="standJumpLevel != null">
        stand_jump_level = #{standJumpLevel,jdbcType=VARCHAR},
      </if>
      <if test="sittingFlexion != null">
        sitting_flexion = #{sittingFlexion,jdbcType=DOUBLE},
      </if>
      <if test="sittingFlexionPoint != null">
        sitting_flexion_point = #{sittingFlexionPoint,jdbcType=INTEGER},
      </if>
      <if test="sittingFlexionLevel != null">
        sitting_flexion_level = #{sittingFlexionLevel,jdbcType=VARCHAR},
      </if>
      <if test="sitUps != null">
        sit_ups = #{sitUps,jdbcType=INTEGER},
      </if>
      <if test="sitUpsPoint != null">
        sit_ups_point = #{sitUpsPoint,jdbcType=INTEGER},
      </if>
      <if test="sitUpsLevel != null">
        sit_ups_level = #{sitUpsLevel,jdbcType=VARCHAR},
      </if>
      <if test="pushUps != null">
        push_ups = #{pushUps,jdbcType=INTEGER},
      </if>
      <if test="pushUpsPoint != null">
        push_ups_point = #{pushUpsPoint,jdbcType=INTEGER},
      </if>
      <if test="pushUpsLevel != null">
        push_ups_level = #{pushUpsLevel,jdbcType=VARCHAR},
      </if>
      <if test="fiftyRun != null">
        fifty_run = #{fiftyRun,jdbcType=DOUBLE},
      </if>
      <if test="fiftyRunPoint != null">
        fifty_run_point = #{fiftyRunPoint,jdbcType=INTEGER},
      </if>
      <if test="fiftyRunLevel != null">
        fifty_run_level = #{fiftyRunLevel,jdbcType=VARCHAR},
      </if>
      <if test="eightHundredRun != null">
        eight_hundred_run = #{eightHundredRun,jdbcType=DOUBLE},
      </if>
      <if test="eightHundredPoint != null">
        eight_hundred_point = #{eightHundredPoint,jdbcType=INTEGER},
      </if>
      <if test="eightHundredLevel != null">
        eight_hundred_level = #{eightHundredLevel,jdbcType=VARCHAR},
      </if>
      <if test="oneThousandRun != null">
        one_thousand_run = #{oneThousandRun,jdbcType=DOUBLE},
      </if>
      <if test="oneThousandPoint != null">
        one_thousand_point = #{oneThousandPoint,jdbcType=INTEGER},
      </if>
      <if test="oneThousandLevel != null">
        one_thousand_level = #{oneThousandLevel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>