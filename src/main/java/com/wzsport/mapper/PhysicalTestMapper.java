package com.wzsport.mapper;

import com.wzsport.model.PhysicalTest;
import com.wzsport.model.PhysicalTestExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface PhysicalTestMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	long countByExample(PhysicalTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	int deleteByExample(PhysicalTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	@Delete({ "delete from wzsport_physical_test", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	@Insert({ "insert into wzsport_physical_test (university_id, college_name, ", "grade_no, class_no, ",
			"class_name, student_no, ", "nationality_no, nationality_name, ", "student_name, is_man, ",
			"birthday, home_address, ", "height, weight, ", "vital_capacity, fifty_run_time, ",
			"standing_long_jump, sit_and_reach, ", "eight_hundred_run_time, one_thousand_run_time, ",
			"one_minute_sit_up, pull_up, ", "mark, teaching_class_no, ", "height_weight_score, height_weight_grade, ",
			"bmi, vital_capacity_score, ", "vital_capacity_grade, standing_long_jump_score, ",
			"standing_long_jump_grade, sit_and_reach_score, ", "sit_and_reach_grade, one_minute_sit_up_score, ",
			"one_minute_sit_up_grade, pull_up_score, ", "pull_up_grade, fifty_run_score, ",
			"fifty_run_grade, eight_hundred_run_score, ", "eight_hundred_run_grade, one_thousand_run_score, ",
			"one_thousand_run_grade, is_tested, ", "is_free_test, total_score, ", "total_score_grade)",
			"values (#{universityId,jdbcType=BIGINT}, #{collegeName,jdbcType=VARCHAR}, ",
			"#{gradeNo,jdbcType=BIGINT}, #{classNo,jdbcType=BIGINT}, ",
			"#{className,jdbcType=VARCHAR}, #{studentNo,jdbcType=VARCHAR}, ",
			"#{nationalityNo,jdbcType=BIGINT}, #{nationalityName,jdbcType=VARCHAR}, ",
			"#{studentName,jdbcType=VARCHAR}, #{isMan,jdbcType=BIT}, ",
			"#{birthday,jdbcType=DATE}, #{homeAddress,jdbcType=VARCHAR}, ",
			"#{height,jdbcType=DECIMAL}, #{weight,jdbcType=DECIMAL}, ",
			"#{vitalCapacity,jdbcType=BIGINT}, #{fiftyRunTime,jdbcType=DECIMAL}, ",
			"#{standingLongJump,jdbcType=INTEGER}, #{sitAndReach,jdbcType=DECIMAL}, ",
			"#{eightHundredRunTime,jdbcType=DECIMAL}, #{oneThousandRunTime,jdbcType=DECIMAL}, ",
			"#{oneMinuteSitUp,jdbcType=SMALLINT}, #{pullUp,jdbcType=SMALLINT}, ",
			"#{mark,jdbcType=VARCHAR}, #{teachingClassNo,jdbcType=BIGINT}, ",
			"#{heightWeightScore,jdbcType=SMALLINT}, #{heightWeightGrade,jdbcType=BIT}, ",
			"#{bmi,jdbcType=DECIMAL}, #{vitalCapacityScore,jdbcType=SMALLINT}, ",
			"#{vitalCapacityGrade,jdbcType=BIT}, #{standingLongJumpScore,jdbcType=SMALLINT}, ",
			"#{standingLongJumpGrade,jdbcType=BIT}, #{sitAndReachScore,jdbcType=SMALLINT}, ",
			"#{sitAndReachGrade,jdbcType=BIT}, #{oneMinuteSitUpScore,jdbcType=SMALLINT}, ",
			"#{oneMinuteSitUpGrade,jdbcType=BIT}, #{pullUpScore,jdbcType=SMALLINT}, ",
			"#{pullUpGrade,jdbcType=BIT}, #{fiftyRunScore,jdbcType=SMALLINT}, ",
			"#{fiftyRunGrade,jdbcType=BIT}, #{eightHundredRunScore,jdbcType=SMALLINT}, ",
			"#{eightHundredRunGrade,jdbcType=BIT}, #{oneThousandRunScore,jdbcType=SMALLINT}, ",
			"#{oneThousandRunGrade,jdbcType=BIT}, #{isTested,jdbcType=BIT}, ",
			"#{isFreeTest,jdbcType=BIT}, #{totalScore,jdbcType=DECIMAL}, ", "#{totalScoreGrade,jdbcType=BIT})" })
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
	int insert(PhysicalTest record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	int insertSelective(PhysicalTest record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	List<PhysicalTest> selectByExample(PhysicalTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	@Select({ "select", "id, university_id, college_name, grade_no, class_no, class_name, student_no, ",
			"nationality_no, nationality_name, student_name, is_man, birthday, home_address, ",
			"height, weight, vital_capacity, fifty_run_time, standing_long_jump, sit_and_reach, ",
			"eight_hundred_run_time, one_thousand_run_time, one_minute_sit_up, pull_up, mark, ",
			"teaching_class_no, height_weight_score, height_weight_grade, bmi, vital_capacity_score, ",
			"vital_capacity_grade, standing_long_jump_score, standing_long_jump_grade, sit_and_reach_score, ",
			"sit_and_reach_grade, one_minute_sit_up_score, one_minute_sit_up_grade, pull_up_score, ",
			"pull_up_grade, fifty_run_score, fifty_run_grade, eight_hundred_run_score, eight_hundred_run_grade, ",
			"one_thousand_run_score, one_thousand_run_grade, is_tested, is_free_test, total_score, ",
			"total_score_grade", "from wzsport_physical_test", "where id = #{id,jdbcType=BIGINT}" })
	@ResultMap("com.wzsport.mapper.PhysicalTestMapper.BaseResultMap")
	PhysicalTest selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	int updateByExampleSelective(@Param("record") PhysicalTest record, @Param("example") PhysicalTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	int updateByExample(@Param("record") PhysicalTest record, @Param("example") PhysicalTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	int updateByPrimaryKeySelective(PhysicalTest record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wzsport_physical_test
	 * @mbg.generated  Sat Nov 18 18:35:44 CST 2017
	 */
	@Update({ "update wzsport_physical_test", "set university_id = #{universityId,jdbcType=BIGINT},",
			"college_name = #{collegeName,jdbcType=VARCHAR},", "grade_no = #{gradeNo,jdbcType=BIGINT},",
			"class_no = #{classNo,jdbcType=BIGINT},", "class_name = #{className,jdbcType=VARCHAR},",
			"student_no = #{studentNo,jdbcType=VARCHAR},", "nationality_no = #{nationalityNo,jdbcType=BIGINT},",
			"nationality_name = #{nationalityName,jdbcType=VARCHAR},",
			"student_name = #{studentName,jdbcType=VARCHAR},", "is_man = #{isMan,jdbcType=BIT},",
			"birthday = #{birthday,jdbcType=DATE},", "home_address = #{homeAddress,jdbcType=VARCHAR},",
			"height = #{height,jdbcType=DECIMAL},", "weight = #{weight,jdbcType=DECIMAL},",
			"vital_capacity = #{vitalCapacity,jdbcType=BIGINT},", "fifty_run_time = #{fiftyRunTime,jdbcType=DECIMAL},",
			"standing_long_jump = #{standingLongJump,jdbcType=INTEGER},",
			"sit_and_reach = #{sitAndReach,jdbcType=DECIMAL},",
			"eight_hundred_run_time = #{eightHundredRunTime,jdbcType=DECIMAL},",
			"one_thousand_run_time = #{oneThousandRunTime,jdbcType=DECIMAL},",
			"one_minute_sit_up = #{oneMinuteSitUp,jdbcType=SMALLINT},", "pull_up = #{pullUp,jdbcType=SMALLINT},",
			"mark = #{mark,jdbcType=VARCHAR},", "teaching_class_no = #{teachingClassNo,jdbcType=BIGINT},",
			"height_weight_score = #{heightWeightScore,jdbcType=SMALLINT},",
			"height_weight_grade = #{heightWeightGrade,jdbcType=BIT},", "bmi = #{bmi,jdbcType=DECIMAL},",
			"vital_capacity_score = #{vitalCapacityScore,jdbcType=SMALLINT},",
			"vital_capacity_grade = #{vitalCapacityGrade,jdbcType=BIT},",
			"standing_long_jump_score = #{standingLongJumpScore,jdbcType=SMALLINT},",
			"standing_long_jump_grade = #{standingLongJumpGrade,jdbcType=BIT},",
			"sit_and_reach_score = #{sitAndReachScore,jdbcType=SMALLINT},",
			"sit_and_reach_grade = #{sitAndReachGrade,jdbcType=BIT},",
			"one_minute_sit_up_score = #{oneMinuteSitUpScore,jdbcType=SMALLINT},",
			"one_minute_sit_up_grade = #{oneMinuteSitUpGrade,jdbcType=BIT},",
			"pull_up_score = #{pullUpScore,jdbcType=SMALLINT},", "pull_up_grade = #{pullUpGrade,jdbcType=BIT},",
			"fifty_run_score = #{fiftyRunScore,jdbcType=SMALLINT},", "fifty_run_grade = #{fiftyRunGrade,jdbcType=BIT},",
			"eight_hundred_run_score = #{eightHundredRunScore,jdbcType=SMALLINT},",
			"eight_hundred_run_grade = #{eightHundredRunGrade,jdbcType=BIT},",
			"one_thousand_run_score = #{oneThousandRunScore,jdbcType=SMALLINT},",
			"one_thousand_run_grade = #{oneThousandRunGrade,jdbcType=BIT},", "is_tested = #{isTested,jdbcType=BIT},",
			"is_free_test = #{isFreeTest,jdbcType=BIT},", "total_score = #{totalScore,jdbcType=DECIMAL},",
			"total_score_grade = #{totalScoreGrade,jdbcType=BIT}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(PhysicalTest record);
}